version: '3'
services:
  nginx:
    image: nginx:latest
    volumes:
      - './nginx/default.conf:/etc/nginx/conf.d/default.conf'
    ports:
      - '${NGINX_PORT}:80'
    depends_on:
      - adonis-server
      - next-frontend
  adonis-server:
    build:
      context: ./tmall-backend
      dockerfile: Dockerfile.dev
    volumes:
      - './tmall-backend:/app'
    working_dir: /app
    tty: true
    ports:
      - '${NODE_SERVER_PORT}:4000'
    env_file:
      - './tmall-backend/.env.docker'
    depends_on:
      - postgres
  next-frontend:
    build:
      context: ./tmall-frontend
      dockerfile: Dockerfile
    volumes:
      - './tmall-frontend:/app/tmall-frontend'
      - './tmall-backend:/app/tmall-backend'
    working_dir: /app/tmall-frontend
    command: yarn dev
    tty: true
    ports:
      - '${NODE_FRONT_PORT}:4001'
    environment:
      APP_ENV: 'docker'
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: tmall
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB_USER: tmall
      POSTGRES_DB_USER_PASSWORD: secret
      TZ: 'Asia/Tokyo'
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - 'data-postgres:/var/lib/postgresql/data'
      - './postgres/init-scripts:/docker-entrypoint-initdb.d'
volumes:
  data-postgres:
